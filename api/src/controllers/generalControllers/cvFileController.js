const multer = require("multer");
const crypto = require("crypto");
const path = require("path");
const CVFile = require("../../models/generalModels/cvFileModel");

let randomFileName;

const cvStorage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, "./uploads"); // Set a specific destination for CV files
  },
  filename: function (req, file, cb) {
    const randomString = crypto.randomBytes(10).toString("hex");
    const fileExtension = path.extname(file.originalname);
    randomFileName = randomString + fileExtension; // Assign the generated name to the variable
    cb(null, randomFileName);
  },
});

const cvUpload = multer({ storage: cvStorage });

async function uploadCV(lecturerId, files) {
  try {
    if (!files || files.length === 0) {
      throw new Error("No files uploaded");
    }

    // Save CV file info for each file
    const cvFileData = await CVFile.saveCVFile(
      files.map((file) => ({
        originalName: file.originalname,
        autogeneratedName: file.filename,
        lecturerId,
        createdAt: new Date(),
      }))
    );

    return cvFileData;
  } catch (error) {
    console.error(error);
    throw new Error("CV upload failed");
  }
}

module.exports = { cvUpload, uploadCV };
